name: Build-Sign-Push

on:
  push:
    branches:
      - main
  
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker Image Tag (e.g. v1.0.5)'
        required: true
        default: 'v0.0.1'

env:
  REPO: "zeyadabuqasem/django"
  TAG: "${{ github.event.inputs.tag  || github.ref_name }}"
  


jobs:
    build-image:
      runs-on: ubuntu-latest
  
      name: build-image
      steps:
        # Check if the user has the required permissions to run the action,
        # Usually, this action is used to deploy the application to the production environment.
        - uses: actions-cool/check-user-permission@v2
          id: check
          with:
            username: ${{ github.triggering_actor }}
      
        - name: close
          if: ${{ steps.check.outputs.user-permission == 'read' || steps.check.outputs.user-permission == 'write' }}
          run: |
            echo -e "[!] Insuffecient Privileges\n[+] Running this action requires admin privileges!"
            exit 1

        - uses: actions/checkout@v4.1.1

        - name: Install Cosign
          uses: sigstore/cosign-installer@v3.4.0
          with:
            cosign-release: 'v2.2.3'
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
  
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_SECRET }}
              
        - name: Build and Push container images
          uses: docker/build-push-action@v5
          id: build-and-push
          with:
            context: "{{defaultContext}}:/django-app" # Path to Dockerfile
            platforms: linux/amd64
            push: true
            tags: ${{ env.REPO }}:${{ env.TAG }}

        - name: Sign image
          env:
            TAGS: ${{ env.REPO }}:${{ env.TAG }} #@${{ steps.build-and-push.outputs.digest }}
            COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
            COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
            DIGEST: ${{ steps.build-and-push.outputs.digest }}
          run: |
            images=""
            for tag in ${TAGS}; do
              images+="${tag}@${DIGEST} "
            done
            cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
